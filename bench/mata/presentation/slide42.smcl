{smcl}
{*  3 Jan 2022}{...}
{hline}
{p}{bf:Functions in Mata} {hline 2} Linear regression and instrumental variable regression{p_end}
{hline}

{center:{bf: turn our Mata code into a function}}

{pstd}
Lets revist our linear regression 
 
{* ex slide42ex1 }{...}
{cmd}
        sysuse nlsw88, clear
        gen byte touse = !missing(wage, grade, union, ttl_exp, tenure, south)
        
        tempname b V
        
        mata:
        X=y=.
        st_view(X,.,"grade union ttl_exp tenure south", "touse")
        st_view(y,.,"wage", "touse")
        XX = cross(X,1, X,1)
        Xy = cross(X,1, y,0)
        b = invsym(XX)*Xy
        
        N = rows(X)
        k = cols(X) + 1
        cons = J(N,1,1)
        res = y - (X,cons)*b
        ess = cross(res,res)
        s2 = ess/(N-k)
        Var = s2*invsym(XX)
        
        st_matrix(st_local("b"), b')
        st_matrix(st_local("V"), Var)
        st_local("df_r", strofreal(N-k))
        st_local("N", strofreal(N))
        end
        
        local xnames `""grade" "union" "ttl_exp" "tenure" "south" "_cons""'
        matrix colnames `b' = `xnames'
        matrix colnames `V' = `xnames'
        matrix rownames `V' = `xnames'
        ereturn post `b' `V', dof(`df_r') obs(`N') esample(touse)
        ereturn display
        
        reg wage grade union ttl_exp tenure south
{txt}{...}
{pstd}({stata "do slide42ex1.do":{it:click to run}}){p_end}


{* endex }{...}
{pstd}
To turn this into function we want the name of the dependent independent and 
selection variable to be arguments
 
{* ex slide42ex2 }{...}
{cmd}
        sysuse nlsw88, clear
        gen byte touse = !missing(wage, grade, union, ttl_exp, tenure, south)
        
        tempname b V
        
        mata:
        mata clear
        mata set matastrict on
        
        void my_regress(string scalar depvar, string scalar indepvars, string scalar select)
        {
            transmorphic X, y
            real matrix XX, Xy, Var
            real colvector b, cons, res
            real scalar N, k, ess, s2
            
            X=y=.
            st_view(X,.,indepvars, select)
            st_view(y,.,depvar, select)
            XX = cross(X,1, X,1)
            Xy = cross(X,1, y,0)
            b = invsym(XX)*Xy
        
            N = rows(X)
            k = cols(X) + 1
            cons = J(N,1,1)
            res = y - (X,cons)*b
            ess = cross(res,res)
            s2 = ess/(N-k)
            Var = s2*invsym(XX)
        
            st_matrix(st_local("b"), b')
            st_matrix(st_local("V"), Var)
            st_local("df_r", strofreal(N-k))
            st_local("N", strofreal(N))
        }
        end
        
        mata: my_regress("wage", "grade union ttl_exp tenure south", "touse")
        local xnames `""grade" "union" "ttl_exp" "tenure" "south" "_cons""'
        matrix colnames `b' = `xnames'
        matrix colnames `V' = `xnames'
        matrix rownames `V' = `xnames'
        ereturn post `b' `V', dof(`df_r') obs(`N') esample(touse)
        ereturn display
        
        reg wage grade union ttl_exp tenure south
{txt}{...}
{pstd}({stata "do slide42ex2.do":{it:click to run}}){p_end}


{* endex }{...}
 
 
{* /p}{hline}
{* bottombar }{center:{view slide41.smcl:<<}   {view index.smcl:index}   {view slide43.smcl:>>}}
{hline}
